backend default {
  .host = "<%= node['varnish']['backend_host'] %>";
  .port = "<%= node['varnish']['backend_port'] %>";
  .probe = { 
    .url = "/robots.txt";
    .timeout = 50ms; 
    .interval = 10s; 
    .window = 5;
    .threshold = 4;
  }
}

sub vcl_recv {
  # ignore all cookies sent by clients
  unset req.http.cookie;

  # we do not want anything else than GET and HEAD
  if (req.request != "GET" && req.request != "HEAD") {
    error 403;
  }

  # serve stale content, if backend is down
  if (! req.backend.healthy) {
    set req.grace = 1d;
  } else {
    set req.grace = 15s;
  }

  return(lookup);
}

sub vcl_fetch {
  # unset all cookies from backend
  unset beresp.http.set-cookie;

  # cache everything for 1h, ignoring what the backend says
  set beresp.ttl = 1h;

  # keep content in cache for a day to serve, if backend is down
  set beresp.grace = 1d;

  # diagnosis
  # Varnish determined the object was not cacheable
  if (beresp.ttl <= 0s) {
    set beresp.http.X-Cacheable = "NO:Not Cacheable";    
  # Varnish determined the object was cacheable
  } else {
    set beresp.http.X-Cacheable = "YES";
  }

  return(deliver);
}

sub vcl_deliver {
  if (obj.hits > 0) {
    set resp.http.X-Cache = "HIT";
  } else {
    set resp.http.X-Cache = "MISS";
  }

  unset resp.http.expires;
  unset resp.http.pragma;
  unset resp.http.cache-control;

  set resp.http.age = "0";
}
